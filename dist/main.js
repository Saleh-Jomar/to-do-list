(()=>{"use strict";class t{static overlay=document.querySelector(".overlay");static addProjectForm=document.querySelector(".add-project-popup");static addTaskForm=document.querySelector(".add-task-popup");static addProjectButton=document.getElementById("button-add-project");static addTaskButton=document.getElementById("add-task-button");static cancelButton=document.querySelectorAll(".cancel");static projDefaultBut=document.querySelectorAll(".button-default");static toDoList=document.querySelector("#to-do-list");static projectList=document.querySelector("#Project-List");static homeButton=document.querySelector("#button-home");static taskTemplate=document.getElementById("Template");static addProjectPopup(){t.addProjectForm.reset(),t.overlay.classList.add("active"),t.addProjectForm.classList.add("active")}static addTaskPopup(){t.addTaskForm.reset(),t.overlay.classList.add("active"),t.addTaskForm.classList.add("active")}static closePopup(){t.overlay.classList.remove("active"),t.addProjectForm.classList.remove("active"),t.addTaskForm.classList.remove("active")}static displayProjectTitle(t){const e=document.querySelector("#current-project-title");if("button-projects"!=t.target.className&&"button-default"!=t.target.className)return;const s="button-projects"==t.target.className?t.target.querySelector("div").innerHTML:t.target.innerHTML;e.innerHTML=s}static changeStatus(t){const e=t.target.parentNode.querySelector(".task-name"),s=t.target.parentNode.parentNode.querySelector(".task-date");t.target.checked?(e.innerHTML=`<s>${e.textContent}</s>`,s.innerHTML=`<s>${s.textContent}</s>`):(e.innerHTML=`${e.textContent}`,s.innerHTML=`${s.textContent}`)}static removeTask(e){const s=e.target.parentNode.parentNode;t.toDoList.removeChild(s)}static removeProject(e){const s=e.target.parentNode;t.projectList.removeChild(s)}static taskDisplayModify(e){switch(e.target.className){case"task-status":t.changeStatus(e);break;case"task-remove":t.removeTask(e)}}static projDisplayModify(e){switch(e.target.className){case"button-projects":t.displayProjectTitle(e);break;case"project-remove":t.removeProject(e)}}static Initialize(){window.addEventListener("keydown",(e=>{t.overlay.classList.contains("active")&&"Escape"===e.key&&t.closePopup()})),t.overlay.addEventListener("click",t.closePopup),t.addProjectButton.addEventListener("click",t.addProjectPopup),t.addTaskButton.addEventListener("click",t.addTaskPopup),t.cancelButton.forEach((e=>{e.addEventListener("click",t.closePopup)})),t.projectList.addEventListener("click",t.projDisplayModify),t.projDefaultBut.forEach((e=>{e.addEventListener("click",t.displayProjectTitle)})),t.toDoList.addEventListener("click",t.taskDisplayModify)}}class e{constructor(t,e,s=!1){this.description=t,this.date=e,this.status=s}setDescription(t){this.description=t}setDate(t){this.date=t}setStatus(t){this.status=t}render(){const e=t.taskTemplate.cloneNode(!0);e.querySelector(".task-name").textContent=this.description,e.querySelector(".task-date").textContent=this.date,e.removeAttribute("id"),e.removeAttribute("style"),t.toDoList.append(e),this.status&&e.querySelector(".task-status").click()}}class s{constructor(t,e=[]){this.name=t,this.tasks=e}getTask(t){return this.tasks.find((e=>e.description===t))}setTasks(t){this.tasks=t}contains(t){return this.tasks.some((e=>e.description===t))}add(t){this.tasks.push(t)}delete(t){const e=this.tasks.find((e=>e.description===t));this.tasks.splice(this.tasks.indexOf(e),1)}render(){const e=document.getElementById("demo-project").cloneNode(!0);e.querySelector(".project-name").textContent=this.name,e.removeAttribute("id"),e.removeAttribute("style"),t.projectList.append(e)}renderTasks(){this.tasks.forEach((t=>t.render()))}}class a{constructor(t,e=[]){this.projects=e,this.projects.push(new s("Home"))}setProjects(t){this.projects=t}getProject(t){return this.projects.find((e=>e.name==t))}contains(t){return this.projects.some((e=>e.name==t))}add(t){this.projects.push(t)}delete(t){const e=this.getProject(t);this.projects.splice(this.projects.indexOf(e),1)}renderProjects(){this.projects.forEach((t=>{"Home"!=t.name&&t.render()}))}}class r{static save(t){localStorage.setItem("todolist",JSON.stringify(t))}static load(){const t=Object.assign(new a,JSON.parse(localStorage.getItem("todolist")));return t.setProjects(t.projects.map((t=>Object.assign(new s,t)))),t.projects.forEach((t=>{t.setTasks(t.tasks.map((t=>Object.assign(new e,t))))})),t}}class o{static TODOLIST=r.load()||new a;static inputTask(){const t=document.querySelector("#task-name").value,s=document.querySelector("#task-date").value||"No Date";return new e(t,s)}static addTask(e){e.preventDefault();const s=o.inputTask(),a=o.getCurrProj();a.contains(s.description)?alert("You already made a task like this"):(a.add(s),s.render(),t.closePopup(),r.save(o.TODOLIST))}static editTaskStatus(t){if("task-status"!=t.target.className)return;const e=t.target.parentNode.parentNode.querySelector(".task-name").textContent;let s=o.getCurrProj();"Home"==s.name&&(s=o.getProjFromDes(e)),s.getTask(e).setStatus(t.target.checked),r.save(o.TODOLIST)}static removeTask(t){if("task-remove"!=t.target.className)return;const e=t.target.parentNode.parentNode.querySelector(".task-name").textContent;let s=o.getCurrProj();"Home"==s.name&&(s=o.getProjFromDes(e)),s.delete(e),r.save(o.TODOLIST)}static inputProject(){const t=document.querySelector("#project-name").value;return new s(t)}static addProject(e){e.preventDefault();const s=o.inputProject();o.TODOLIST.contains(s.name)?alert("You already have a project like this"):(o.TODOLIST.add(s),s.render(),t.closePopup(),r.save(o.TODOLIST))}static getCurrProj(){const t=document.getElementById("current-project-title").textContent.trim();return o.TODOLIST.getProject(t)}static getProjFromDes(t){for(let e of o.TODOLIST.projects)if(e.contains(t))return e}static removeProject(e){if("project-remove"!=e.target.className)return;const s=e.target.parentNode.querySelector(".project-name").textContent;o.TODOLIST.delete(s),t.homeButton.click(),r.save(o.TODOLIST)}static renderProject(e){if("button-projects"!=e.target.className)return;const s=e.target.querySelector(".project-name").textContent,a=o.TODOLIST.getProject(s);t.toDoList.innerHTML="",a.renderTasks()}static renderHome(e){t.toDoList.innerHTML="",o.TODOLIST.projects.forEach((t=>{t.renderTasks()}))}static initialLoad(){o.TODOLIST.renderProjects(),t.homeButton.click()}static Initialize(){t.Initialize(),t.addTaskForm.addEventListener("submit",o.addTask),t.toDoList.addEventListener("click",o.editTaskStatus),t.toDoList.addEventListener("click",o.removeTask),t.addProjectForm.addEventListener("submit",o.addProject),t.projectList.addEventListener("click",o.removeProject),t.projectList.addEventListener("click",o.renderProject),t.homeButton.addEventListener("click",o.renderHome),o.initialLoad()}}o.Initialize()})();